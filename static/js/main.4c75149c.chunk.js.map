{"version":3,"sources":["components/navListItem/navListItem.module.css","components/error/error.module.css","components/loading/loading.module.css","components/error/error.js","service/Reducer.js","service/store.js","components/header/header.js","components/loading/loading.js","components/navListItem/navListItem.js","components/navList/navList.js","components/redditListItem/redditListItem.js","components/redditList/redditList.js","App.js","reportWebVitals.js","index.js","components/redditListItem/redditListItem.module.css","components/header/header.module.css"],"names":["module","exports","Error","props","className","style","error","msg","reducer","state","action","type","navigationItems","payload","selectedSubReddit","sortBy","storyItems","initialState","setNavigationItems","setStoryItems","setSelectedSubReddit","setSortStory","setError","context","React","createContext","Context","ContextProvider","State","dispatch","fnId","url","useReducer","Provider","value","children","Header","ctx","useContext","header","heading","slice","length","name","id","onChange","e","console","log","target","disabled","selected","Loading","loader","NavListItem","item","onClick","navItemBox","navItemBoxActive","NavList","useState","loading","setLoading","randomNo","Date","now","navItemsHandler","a","NavigationItemObjectType","axios","get","res","data","JSON","parse","forEach","display_name","push","useEffect","map","selectedItem","RedditListitem","readMore","setMore","toggle","info","redditListBox","redditNum","subscribers","subReddit","toString","trim","authorDetails","author","RedditList","sortedArr","storyItemsHandler","storyObj","storyArr","RedditUrl","title","score","sort","b","App","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c75149c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItemBox\":\"navListItem_navItemBox__1CZaK\",\"navItemBoxActive\":\"navListItem_navItemBoxActive__2kg1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"error_error__39s5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loading_loader__3HQ3t\"};","import React from 'react';\r\nimport style from './error.module.css';\r\n\r\nconst Error = (props)=>{\r\n    return (\r\n        <div className={style.error}>\r\n            <h1>{props.msg}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import {useEffect} from 'react'; \r\nimport axios from 'axios'; \r\n//    https://www.reddit.com${item.data.url}.json?sort=top&t=month&jsonp=${cbname}\r\n\r\n// const randomNo = `fn${Date.now()}`;\r\n\r\n\r\n// const navItemsHandler = async ()=>{\r\n//     var NavigationItemObjectType = {};\r\n//     var navigationItems= [];\r\n//     const res = await axios.get(`https://www.reddit.com/reddits.json?jsonp=${randomNo}`);\r\n//     let data = await res.data;\r\n//     data=data.slice(5+randomNo.length,data.length-1);\r\n//     data=JSON.parse(data)\r\n//     let arr = data.data.children\r\n//     arr.forEach(e => {\r\n//         const url = e.data.url;\r\n//         const name = e.data.display_name;\r\n//         const id = e.data.id;\r\n//         NavigationItemObjectType = {\r\n//             url,\r\n//             name,\r\n//             id\r\n//         }\r\n//         navigationItems.push(NavigationItemObjectType);\r\n//     });\r\n//     return navigationItems;\r\n// }\r\n\r\n// const storyItemHandler=(data)=>{\r\n//     var arr=[1,2,3];\r\n//     console.log(data.url.substr(22,));\r\n//     return arr;\r\n// }\r\n\r\nconst reducer = (state, action)=>{\r\n    switch(action.type){\r\n        case 'set-nav-items':{\r\n            return {...state, navigationItems:action.payload}\r\n        }\r\n        break;\r\n        case 'set-selected-items':{\r\n            return {...state, selectedSubReddit:action.payload}\r\n        }\r\n        break;\r\n        case 'set-sort-story':{\r\n            return {...state, sortBy:action.payload}\r\n        }\r\n        break;\r\n        case 'set-story-items':{    \r\n            return {...state, storyItems:action.payload}\r\n        }\r\n        break;\r\n        case 'set-error':{    \r\n            return {...state, error:{...state.error,error:action.payload.error, msg:action.payload.msg}}\r\n        }\r\n        break;\r\n        default:\r\n            throw new Error(\"invalid input\");\r\n    }\r\n};\r\n    \r\nexport default reducer;\r\n\r\n\r\n","import React, { createContext, useReducer } from 'react';\r\nimport reducer from './Reducer';\r\n\r\nconst initialState = {\r\n    setNavigationItems: ()=>{},\r\n    setStoryItems: ()=>{},\r\n    setSelectedSubReddit: ()=>{},\r\n    navigationItems:[],\r\n    storyItems: [],\r\n    selectedSubReddit: {},\r\n    setSortStory: null,\r\n    sortBy : null,\r\n    setError: null\r\n}\r\nconst context = React.createContext(initialState); // creating the context and giving the initial state\r\n\r\nconst ContextProvider = (props)=>{\r\n    \r\n    const navigationItemHandler = (payload)=>{\r\n        dispatch({type: 'set-nav-items', payload:payload});\r\n    }\r\n    const selectedSubRedditHandler = (payload)=>{\r\n        dispatch({type: 'set-selected-items', payload:payload});\r\n    }\r\n    const storyItemHandler = (payload)=>{\r\n        dispatch({type: 'set-story-items', payload:payload});\r\n    }\r\n    const setSortStoryHandler = (payload)=>{\r\n        dispatch({type: 'set-sort-story', payload:payload});\r\n    }\r\n    const errorHandler = (payload)=>{\r\n        dispatch({type: 'set-error', payload:payload});\r\n    }\r\n    \r\n    const State = {  \r\n        setNavigationItems: navigationItemHandler,\r\n        setStoryItems: storyItemHandler,\r\n        setSelectedSubReddit: selectedSubRedditHandler,\r\n        navigationItems:[],\r\n        storyItems: [],\r\n        selectedSubReddit: {\r\n            fnId:'fn1623341964660', \r\n            url:'/r/Home/'\r\n        },\r\n        setSortStory:setSortStoryHandler,\r\n        sortBy : null,\r\n        error: {error:false, msg:null, setError:errorHandler}\r\n    }   \r\n    \r\n\r\n    const [state, dispatch] = useReducer(reducer, State);\r\n\r\n\r\n    return (\r\n        <context.Provider value={state}>\r\n            {props.children}\r\n        </context.Provider>\r\n    );\r\n}\r\n\r\nconst Context={\r\n    context:context,\r\n    ContextProvider:ContextProvider\r\n}\r\n\r\nexport default Context;","import React, { useContext } from 'react';\r\nimport Context from '../../service/store';\r\nimport style from './header.module.css';\r\n\r\nconst Header = ()=>{\r\n    const ctx = useContext(Context.context);\r\n    const func=(e)=>{\r\n        console.log(e.target.value);\r\n        ctx.setSortStory(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <header className={style.header}>\r\n            <div className={style.heading}>\r\n                <div>\r\n                    <span>\r\n                        <p>\r\n                            {ctx.selectedSubReddit.url.slice(3,ctx.selectedSubReddit.url.length-1)}\r\n                        </p>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={style.sortBy}>\r\n                &emsp;\r\n                <span>\r\n                    Sort by: \r\n                    <span>\r\n                        <select name=\"sort\" id=\"sort\" onChange={func}>\r\n                            <option disabled selected value> Sort by </option>\r\n                            <option value=\"asc\">asc</option>\r\n                            <option value=\"desc\" >desc</option>\r\n                        </select>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from './loading.module.css'\r\n\r\nconst Loading = ()=>{\r\n    return (\r\n        <>\r\n            <div className={style.loader}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Loading;","import React, { useContext, useEffect, useState } from 'react';\r\nimport Context from '../../service/store';\r\nimport style from './navListItem.module.css';\r\n\r\nconst NavListItem = (props)=>{\r\n    const ctx = useContext(Context.context);\r\n    const item = ctx.selectedSubReddit;\r\n    const run = ()=>{\r\n        if(props.id!=1)\r\n        props.setSelectedSubReddit();\r\n    }\r\n    \r\n    return (\r\n        <div onClick={run} className={item.name!=props.name?style.navItemBox:style.navItemBoxActive}>\r\n            <li key={props.id}>\r\n                {props.name}\r\n            </li>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default NavListItem;","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport Context from '../../service/store';\r\nimport NavListItem from '../navListItem/navListItem';\r\n\r\n\r\nconst NavList = ()=>{\r\n    const ctx = useContext(Context.context);\r\n    const [loading, setLoading] = useState(false);\r\n    const randomNo = `fn${Date.now()}`;\r\n\r\n    const navItemsHandler = async ()=>{\r\n        var NavigationItemObjectType = {};\r\n        var navigationItems= [];\r\n        const res = await axios.get(`https://www.reddit.com/reddits.json?jsonp=${randomNo}`);\r\n        let data = await res.data;\r\n        data=data.slice(5+randomNo.length,data.length-1);\r\n        data=JSON.parse(data)\r\n        let arr = data.data.children\r\n        arr.forEach(e => {\r\n            const url = e.data.url;\r\n            const name = e.data.display_name;\r\n            const id = e.data.id;\r\n            NavigationItemObjectType = {\r\n                url,\r\n                name,\r\n                id,\r\n                fnId:randomNo\r\n            }\r\n            navigationItems.push(NavigationItemObjectType);\r\n        });\r\n        ctx.setNavigationItems(navigationItems)\r\n        setLoading(true);\r\n    }\r\n    useEffect(()=>{\r\n        navItemsHandler();\r\n        setLoading(false);\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                <NavListItem name=\"Reddit Links\" id={1}/>\r\n                {!loading?<p>Loading...</p>:ctx.navigationItems.map((e)=>{\r\n                    return <NavListItem setSelectedSubReddit={()=>{ctx.setSelectedSubReddit(e)}} selectedItem={e} name={e.name} url={e.url} id={e.id}/>\r\n                })}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavList;","import React, { useEffect, useState, useContext } from 'react';\r\nimport style from './redditListItem.module.css';\r\nimport Context from '../../service/store';\r\n\r\nconst RedditListitem = (props)=>{\r\n    const [readMore,setMore] = useState(true);\r\n\r\n    const ctx = useContext(Context.context);\r\n\r\n    const toggle=()=>{\r\n        if(props.info.length>100 && !readMore){\r\n            setMore(true);\r\n        }\r\n        if(props.info.length>100 && readMore){\r\n            setMore(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.redditListBox}>\r\n            <div className={style.redditNum}>\r\n                <span>\r\n                    {props.subscribers}\r\n                </span>\r\n            </div>\r\n            <div className={style.subReddit}>\r\n                <div className={style.info}>\r\n                    <span>\r\n                       {readMore && props.info.length>100?props.info.slice(0,100).toString().trim()+\"...\":props.info}\r\n                    </span>\r\n                    {readMore && props.info.length>100?<span onClick = {toggle} className={style.readMore}>Read More...</span>:null}\r\n                    {!readMore && props.info.length>100?<span onClick = {toggle} className={style.readMore}>Read Less...</span>:null}\r\n                </div>\r\n                <div className={style.authorDetails}>\r\n                    <span>\r\n                        <p>\r\n                            Posted by: \r\n                        </p>\r\n                    </span>\r\n                    <span>\r\n                        <p>\r\n                            {props.author}\r\n                        </p>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default RedditListitem;","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport Context from '../../service/store';\r\nimport Loading from '../loading/loading';\r\nimport RedditListitem from '../redditListItem/redditListItem';\r\n\r\n\r\nconst RedditList = ()=>{\r\n    const ctx = useContext(Context.context);\r\n    const [loading, setLoading] = useState(false);\r\n    var sortedArr = [];\r\n\r\n    const storyItemsHandler = async (payload)=>{\r\n        try{\r\n            console.log(payload)\r\n            const fnId=payload.fnId;\r\n            payload=payload.url;\r\n            var storyObj = {};\r\n            var storyArr = [];\r\n            var RedditUrl= `https://www.reddit.com${payload}.json?sort=top&t=month&jsonp=${fnId}`;\r\n            console.log(\"URL: \"+RedditUrl)\r\n            var data = await axios.get(RedditUrl);\r\n            data=data.data.slice(5+fnId.length,data.data.length-1);\r\n            data=JSON.parse(data).data.children;\r\n            console.log(data);\r\n            data.forEach(e => {\r\n                const author = e.data.author;\r\n                const id = e.data.id;\r\n                const info = e.data.title;\r\n                const subscribers = e.data.score;\r\n                storyObj = {\r\n                    id,\r\n                    subscribers,\r\n                    info,\r\n                    author\r\n                }\r\n                storyArr.push(storyObj);\r\n            });\r\n            if(ctx.sortBy!=null){\r\n                storyArr.forEach((e)=>{\r\n                    sortedArr.push(e);\r\n                });\r\n                if(ctx.sortBy==\"asc\"){\r\n                    sortedArr.sort((a,b) => (a.subscribers > b.subscribers) ? 1 : ((b.subscribers > a.subscribers) ? -1 : 0));\r\n                    ctx.setStoryItems(sortedArr);\r\n                }\r\n                if(ctx.sortBy==\"desc\"){\r\n                    sortedArr.sort((a,b) => (a.subscribers > b.subscribers) ? -1 : ((b.subscribers > a.subscribers) ? 1 : 0));\r\n                    ctx.setStoryItems(sortedArr)\r\n                }\r\n            }\r\n            else\r\n                ctx.setStoryItems(storyArr);\r\n            setLoading(true);\r\n        }\r\n        catch(err){\r\n            ctx.error.setError({error:true, msg:\"Network Issue...\"});\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n            ctx.storyItems.forEach((e)=>{\r\n                sortedArr.push(e);\r\n            });\r\n            if(ctx.sortBy==\"asc\"){\r\n                sortedArr.sort((a,b) => (a.subscribers > b.subscribers) ? 1 : ((b.subscribers > a.subscribers) ? -1 : 0));\r\n                ctx.setStoryItems(sortedArr);\r\n            }\r\n            if(ctx.sortBy==\"desc\"){\r\n                sortedArr.sort((a,b) => (a.subscribers > b.subscribers) ? -1 : ((b.subscribers > a.subscribers) ? 1 : 0));\r\n                ctx.setStoryItems(sortedArr)\r\n            }\r\n    }, [ ctx.sortBy ])\r\n\r\n    useEffect(()=>{\r\n        storyItemsHandler(ctx.selectedSubReddit);\r\n        setLoading(false);\r\n    },[ctx.selectedSubReddit])\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {!ctx.error.error && !loading?<Loading/>:ctx.storyItems.map((e)=>{\r\n                        return <RedditListitem info={e.info} subscribers={e.subscribers} author={e.author} id={e.id} />\r\n                })}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RedditList;","import { useContext, useEffect } from 'react';\nimport './App.css';\nimport Error from './components/error/error';\nimport Header from './components/header/header';\nimport Loading from './components/loading/loading';\nimport NavList from './components/navList/navList';\nimport RedditList from './components/redditList/redditList';\nimport Context from './service/store';\n\nfunction App() {\n  const ctx = useContext(Context.context);\n  useEffect(()=>{\n    console.log(ctx.error)\n  }, [ ctx.error])\n    return (\n      <div class=\"App\">\n       <Header/>\n       {!ctx.error.error?\n        <div class='section'>\n          <div class=\"sectionLeft\">\n            <RedditList/>\n          </div>\n          <div class=\"sectionRight\">\n            <NavList/>\n          </div>\n        </div>:<Error msg={ctx.error.msg}/>}\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Context from './service/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context.ContextProvider>\n    <App />\n    </Context.ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"redditListBox\":\"redditListItem_redditListBox__11s4z\",\"redditNum\":\"redditListItem_redditNum__5xssP\",\"subReddit\":\"redditListItem_subReddit__21e35\",\"info\":\"redditListItem_info__LPmbv\",\"authorDetails\":\"redditListItem_authorDetails__1fYvb\",\"readMore\":\"redditListItem_readMore__1LzrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2Cidx\",\"sortBy\":\"header_sortBy__1PRKH\",\"heading\":\"header_heading__3AXlM\"};"],"sourceRoot":""}